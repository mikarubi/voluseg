"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2010],{6684:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>o,toc:()=>a});var r=s(4848),i=s(8453);const t={sidebar_label:"step4d",title:"steps.step4d"},l=void 0,o={id:"reference/steps/step4d",title:"steps.step4d",description:"os",source:"@site/docs/reference/steps/step4d.md",sourceDirName:"reference/steps",slug:"/reference/steps/step4d",permalink:"/voluseg/docs/reference/steps/step4d",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_label:"step4d",title:"steps.step4d"},sidebar:"docsSidebar",previous:{title:"step4c",permalink:"/voluseg/docs/reference/steps/step4c"},next:{title:"step4e",permalink:"/voluseg/docs/reference/steps/step4e"}},d={},a=[{value:"os",id:"os",level:2},{value:"Tuple",id:"tuple",level:2},{value:"np",id:"np",level:2},{value:"stats",id:"stats",level:2},{value:"linalg",id:"linalg",level:2},{value:"measure",id:"measure",level:2},{value:"sparseness_projection",id:"sparseness_projection",level:2},{value:"nnmf_sparse",id:"nnmf_sparse",level:4}];function c(e){const n={code:"code",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"os",children:"os"}),"\n",(0,r.jsx)(n.h2,{id:"tuple",children:"Tuple"}),"\n",(0,r.jsx)(n.h2,{id:"np",children:"np"}),"\n",(0,r.jsx)(n.h2,{id:"stats",children:"stats"}),"\n",(0,r.jsx)(n.h2,{id:"linalg",children:"linalg"}),"\n",(0,r.jsx)(n.h2,{id:"measure",children:"measure"}),"\n",(0,r.jsx)(n.h2,{id:"sparseness_projection",children:"sparseness_projection"}),"\n",(0,r.jsx)(n.h4,{id:"nnmf_sparse",children:"nnmf_sparse"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def nnmf_sparse(\n        V0: np.ndarray,\n        XYZ0: np.ndarray,\n        W0: np.ndarray,\n        B0: np.ndarray,\n        S0: np.ndarray,\n        tolfun: float = 1e-4,\n        miniter: int = 10,\n        maxiter: int = 100,\n        timeseries_mean=1.0,\n        timepoints: np.ndarray = None,\n        verbosity: bool = True) -> Tuple[np.ndarray, np.ndarray, float]\n"})}),"\n",(0,r.jsx)(n.p,{children:"Cell detection via nonnegative matrix factorization with sparseness projection."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"V0"})," (",(0,r.jsx)(n.code,{children:"np.ndarray"}),"): Voxel timeseries (voxel_timeseries_valid)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"XYZ0"})," (",(0,r.jsx)(n.code,{children:"np.ndarray"}),"): Voxel coordinates (voxel_xyz_valid)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"W0"})," (",(0,r.jsx)(n.code,{children:"np.ndarray"}),"): Initial cell weights (cell_weight_init_valid)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"B0"})," (",(0,r.jsx)(n.code,{children:"np.ndarray"}),"): Cell neighborhood (cell_neighborhood_valid)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"S0"})," (",(0,r.jsx)(n.code,{children:"np.ndarray"}),"): Cell sparseness (cell_sparseness)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"tolfun"})," (",(0,r.jsx)(n.code,{children:"float, optional"}),"): Tolerance for convergence, by default 1e-4."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"miniter"})," (",(0,r.jsx)(n.code,{children:"int, optional"}),"): Minimum number of iterations, by default 10."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"maxiter"})," (",(0,r.jsx)(n.code,{children:"int, optional"}),"): Maximum number of iterations, by default 100."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"timeseries_mean"})," (",(0,r.jsx)(n.code,{children:"float, optional"}),"): Mean timeseries value, by default 1.0."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"timepoints"})," (",(0,r.jsx)(n.code,{children:"np.ndarray, optional"}),"): Timepoints to use, by default None."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"verbosity"})," (",(0,r.jsx)(n.code,{children:"bool, optional"}),"): Print progress, by default True."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Tuple[np.ndarray, np.ndarray, float]"}),": Tuple containing: Spatial footprint, temporal footprint, convergence error."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var r=s(6540);const i={},t=r.createContext(i);function l(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);