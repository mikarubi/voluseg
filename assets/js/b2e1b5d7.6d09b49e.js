"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7725],{7438:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>a});var s=n(4848),i=n(8453);const o={title:"Running on AWS Batch",sidebar_position:4},r=void 0,c={id:"getting_started/iac_aws_batch",title:"Running on AWS Batch",description:"Here we provide instructions for setting up your Voluseg service to run jobs in AWS Batch. First you will need to provision the base AWS Batch infrastructure using CDK. This includes IAM roles, VPC, Security Group, Batch Compute Environments and Batch Job Queues. Next you will need to configure your compute resource controller to submit jobs to AWS Batch. Finally, when you submit jobs from the web interface, you must select aws_batch as the run method.",source:"@site/docs/getting_started/iac_aws_batch.mdx",sourceDirName:"getting_started",slug:"/getting_started/iac_aws_batch",permalink:"/voluseg/docs/getting_started/iac_aws_batch",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Running on AWS Batch",sidebar_position:4},sidebar:"docsSidebar",previous:{title:"Running from Container",permalink:"/voluseg/docs/getting_started/running_container"},next:{title:"Pipeline Parameters",permalink:"/voluseg/docs/getting_started/parameters"}},l={},a=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1. Provision base Batch infrastructure with CDK",id:"step-1-provision-base-batch-infrastructure-with-cdk",level:2},{value:"Step 2. Submit jobs to AWS Batch",id:"step-2-submit-jobs-to-aws-batch",level:2}];function u(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"Here we provide instructions for setting up your Voluseg service to run jobs in AWS Batch. First you will need to provision the base AWS Batch infrastructure using CDK. This includes IAM roles, VPC, Security Group, Batch Compute Environments and Batch Job Queues. Next you will need to configure your compute resource controller to submit jobs to AWS Batch. Finally, when you submit jobs from the web interface, you must select aws_batch as the run method."}),"\n",(0,s.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Python >= 3.11"}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html",children:"AWS CLI"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://docs.aws.amazon.com/cdk/latest/guide/cli.html",children:"AWS CDK Toolkit"})}),"\n",(0,s.jsxs)(t.li,{children:["Set up your AWS credentials, either by ",(0,s.jsx)(t.a,{href:"https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-quickstart.html",children:"configuring the AWS CLI"})," or by ",(0,s.jsx)(t.a,{href:"https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-envvars.html",children:"setting environment variables"}),"."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"step-1-provision-base-batch-infrastructure-with-cdk",children:"Step 1. Provision base Batch infrastructure with CDK"}),"\n",(0,s.jsx)(t.p,{children:"AWS CDK is a very convenient tool, it helps automate the provisioning of AWS infrastructure and organizes all created resources in a CloudFormation stack, which can be easily updated or deleted."}),"\n",(0,s.jsx)(t.p,{children:"Follow these steps if you're running the Voluseg CDK stack for the first time:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["go to ",(0,s.jsx)(t.code,{children:"cloned_voluseg_repo_path/iac/aws_batch"})," directory."]}),"\n",(0,s.jsxs)(t.li,{children:["run ",(0,s.jsx)(t.code,{children:"pip install -r requirements.txt"})," to install the required Python packages."]}),"\n",(0,s.jsxs)(t.li,{children:["run ",(0,s.jsx)(t.code,{children:"cdk bootstrap"})," to set up the CDK deployment infrastructure (CKDToolkit) in your AWS account. This only needs to be done once."]}),"\n",(0,s.jsxs)(t.li,{children:["run ",(0,s.jsx)(t.code,{children:"cdk deploy"})," to deploy the stack to your default AWS account/region."]}),"\n",(0,s.jsxs)(t.li,{children:["you will be prompted to confirm the deployment. Review the changes, then type ",(0,s.jsx)(t.code,{children:"y"})," and hit enter."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"If deployment is successful, you will be able to see the stacks in the CloudFormation page in AWS console."}),"\n",(0,s.jsxs)(t.admonition,{type:"tip",children:[(0,s.jsx)(t.p,{children:"Other useful CDK commands:"}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"cdk ls"})," - list all stacks in the app."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"cdk synth"})," to synthesize the CloudFormation template without deploying it."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"cdk diff"})," - compare deployed stack with current state."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"cdk destroy"})," - destroy the stack."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"cdk docs"})," - open CDK documentation."]}),"\n"]})]}),"\n",(0,s.jsx)(t.p,{children:"This deployment will create the following AWS resources in your account:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["IAM roles:","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Batch service role"}),"\n",(0,s.jsx)(t.li,{children:"ECS instance role"}),"\n",(0,s.jsx)(t.li,{children:"Batch jobs access role"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.li,{children:"VPC"}),"\n",(0,s.jsx)(t.li,{children:"Security group"}),"\n",(0,s.jsx)(t.li,{children:"EC2 Launch template"}),"\n",(0,s.jsx)(t.li,{children:"Batch Compute environment"}),"\n",(0,s.jsx)(t.li,{children:"Batch Job queue"}),"\n",(0,s.jsx)(t.li,{children:"Batch Job definition"}),"\n",(0,s.jsx)(t.li,{children:"S3 bucket"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"step-2-submit-jobs-to-aws-batch",children:"Step 2. Submit jobs to AWS Batch"}),"\n",(0,s.jsx)(t.p,{children:"Voluseg provides an utility function to submit jobs to AWS Batch. You can use this function to submit jobs from your local machine. You must provide the url of the remote file stored in S3, plus any other voluseg arguments you want to pass to the job. Example:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'from voluseg.tools.aws import run_job_in_aws_batch\n\nr = run_job_in_aws_batch(\n    job_name="my-voluseg-job",\n    voluseg_kwargs={\n        "dir_input": "https://dandi-api-staging-dandisets.s3.amazonaws.com/blobs/6b0/7b0/6b07b076-e4f2-4123-b8e5-08cec3e72aeb",\n        "timepoints": 2000,\n    },\n    aws_local_profile="default",  # optional - if not provided, the default profile will be used\n)\nprint(r)\n'})}),"\n",(0,s.jsx)(t.p,{children:"Once submitted, you can monitor the job status in the AWS Batch console."}),"\n",(0,s.jsx)(t.p,{children:"The results of the job will be stored in the S3 bucket created by the CDK stack. You can access the results by navigating to the S3 bucket in the AWS console."})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var s=n(6540);const i={},o=s.createContext(i);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);