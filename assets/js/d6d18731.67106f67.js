"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4435],{3774:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>p,frontMatter:()=>r,metadata:()=>d,toc:()=>o});var i=s(4848),l=s(8453);const r={sidebar_label:"step4b",title:"steps.step4b"},t=void 0,d={id:"reference/steps/step4b",title:"steps.step4b",description:"os",source:"@site/docs/reference/steps/step4b.md",sourceDirName:"reference/steps",slug:"/reference/steps/step4b",permalink:"/voluseg/docs/reference/steps/step4b",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_label:"step4b",title:"steps.step4b"},sidebar:"docsSidebar",previous:{title:"step4a",permalink:"/voluseg/docs/reference/steps/step4a"},next:{title:"step4c",permalink:"/voluseg/docs/reference/steps/step4c"}},a={},o=[{value:"os",id:"os",level:2},{value:"Tuple",id:"tuple",level:2},{value:"np",id:"np",level:2},{value:"h5py",id:"h5py",level:2},{value:"time",id:"time",level:2},{value:"interpolate",id:"interpolate",level:2},{value:"morphology",id:"morphology",level:2},{value:"SimpleNamespace",id:"simplenamespace",level:2},{value:"ali",id:"ali",level:2},{value:"hdf",id:"hdf",level:2},{value:"dtype",id:"dtype",level:2},{value:"process_block_data",id:"process_block_data",level:4}];function c(e){const n={code:"code",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"os",children:"os"}),"\n",(0,i.jsx)(n.h2,{id:"tuple",children:"Tuple"}),"\n",(0,i.jsx)(n.h2,{id:"np",children:"np"}),"\n",(0,i.jsx)(n.h2,{id:"h5py",children:"h5py"}),"\n",(0,i.jsx)(n.h2,{id:"time",children:"time"}),"\n",(0,i.jsx)(n.h2,{id:"interpolate",children:"interpolate"}),"\n",(0,i.jsx)(n.h2,{id:"morphology",children:"morphology"}),"\n",(0,i.jsx)(n.h2,{id:"simplenamespace",children:"SimpleNamespace"}),"\n",(0,i.jsx)(n.h2,{id:"ali",children:"ali"}),"\n",(0,i.jsx)(n.h2,{id:"hdf",children:"hdf"}),"\n",(0,i.jsx)(n.h2,{id:"dtype",children:"dtype"}),"\n",(0,i.jsx)(n.h4,{id:"process_block_data",children:"process_block_data"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def process_block_data(\n    xyz0: Tuple[int, int, int], xyz1: Tuple[int, int, int], parameters: dict,\n    color_i: int, lxyz: Tuple[int, int, int], rxyz: Tuple[float, float, float],\n    ball_diam: np.ndarray, bvolume_mean: h5py.Dataset,\n    bvolume_peak: h5py.Dataset, timepoints: np.ndarray\n) -> Tuple[np.ndarray, np.ndarray, np.ndarray, np.ndarray]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Load timeseries in individual blocks, slice-time correct, and find similar timeseries."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Arguments"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"xyz0"})," (",(0,i.jsx)(n.code,{children:"Tuple[int, int, int]"}),"): Start coordinates of block."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"xyz1"})," (",(0,i.jsx)(n.code,{children:"Tuple[int, int, int]"}),"): End coordinates of block."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"parameters"})," (",(0,i.jsx)(n.code,{children:"dict"}),"): Parameters dictionary."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"color_i"})," (",(0,i.jsx)(n.code,{children:"int"}),"): Color index."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"lxyz"})," (",(0,i.jsx)(n.code,{children:"Tuple[int, int, int]"}),"): Number of voxels in x, y, and z dimensions."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"rxyz"})," (",(0,i.jsx)(n.code,{children:"Tuple[float, float, float]"}),"): The resolution of x, y, and z dimensions."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ball_diam"})," (",(0,i.jsx)(n.code,{children:"np.ndarray"}),"): The diameter of a cell-area sphere."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"bvolume_mean"})," (",(0,i.jsx)(n.code,{children:"h5py.Dataset"}),"): Spark broadcast variable: volume mean."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"bvolume_peak"})," (",(0,i.jsx)(n.code,{children:"h5py.Dataset"}),"): Spark broadcast variable: local intensity maximum volume (peak)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"timepoints"})," (",(0,i.jsx)(n.code,{children:"np.ndarray"}),"): Timepoints at which segmentation will be performed."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Tuple[np.ndarray, np.ndarray, np.ndarray, np.ndarray]"}),": Tuple containing: Voxel coordinates, timeseries, peak indices, and similarity matrix of peaks."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>d});var i=s(6540);const l={},r=i.createContext(l);function t(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);